DOCUMENTATION:
-Comment and publish code;
-Presentation with possibilities, instructions, code structure and theory;
-GitLab Wiki: Similar to Kratos, with instructions and theory;
-Website: similar to NeutralFile and Ftool (with model instructions and theory);
-Register: patent nad DOI;
-Articles: JOSS, Educational, Computer algorithms, others (mecanica computational);

----------------------------------------------------------------------------------------------------------
IMPLEMENTATIONS:
-Recursive tests;
-Draw model before analysis start;
-Define fluid properties for heat exchange, convection, etc (global or local properties: temperature, velocity, etc);
-Variable properties;
-Update particle volume if material has ThermalExpansionCoeff (think if radius is also set to change as a variable property);
-Matrix search method, taking advantage from Matlab array operations (see script file with tests);
-Periodic B.C.;
-New types of particles: elipsoids, etc;
-Print results file that can be loaded, to avoid needing to run again to get results;
-Picture of result in a particular time (depict);
-Export results: paraview, gid;
-Convection/Radiation:
 Compute convection heat transfer with surrounding fluid (fixed given properties globally or locally) and add to interaction components;
 Compute radiation heat transfer with surroundings (fixed given property) and add to previous components;
 
----------------------------------------------------------------------------------------------------------
IDEAS:
-Send a warning when a condition is applied twice to an element, saying that the last one is kept;
-Creation/destruction time for model parts;
-Add frequency for every possible calculation (check and evaluate BBox, Sink, Conditions, etc);
-Allow conditions to be dependent not only on time, but also on particle states, like temperature, etc;
-Fixed forces/torques, just like fixed heat flux;
-Graph of total model results over time: number particles, number of interactions, contact forces, heat flux, etc;
-Evaluate interactions and particles in the same loop;
-Create an interaction for all elements before analysis starts (more memory but more efficient loop);
-Automatic separate model into a high/slow dynamic models parts in order to use different time steps and integration schemes in each one;
